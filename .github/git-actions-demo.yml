name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Change this to your main branch name

jobs:
  deploy:
    runs-on: ubuntu-latest  # You can choose a different runner if needed

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: actions/setup-python@v2
      with:
        python-version: 3.x  # Specify your Python version if needed

    - name: Build Docker image
      run: docker build -t your-app-name:latest .

    - name: Authenticate with AWS ECR
      run: |
        aws ecr get-login-password --region your-aws-region | docker login --username AWS --password-stdin your-account-id.dkr.ecr.your-aws-region.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Tag Docker image
      run: docker tag your-app-name:latest your-account-id.dkr.ecr.your-aws-region.amazonaws.com/your-repo-name:latest

    - name: Push Docker image to AWS ECR
      run: docker push your-account-id.dkr.ecr.your-aws-region.amazonaws.com/your-repo-name:latest

    - name: SSH into AWS EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: your-ec2-instance-ip
        username: ec2-user  # Use your EC2 instance username
        key: ${{ secrets.SSH_PRIVATE_KEY }}  # Store your SSH private key as a GitHub secret
        port: 22

    - name: Pull Docker image on AWS EC2
      run: |
        ssh ec2-user@your-ec2-instance-ip "docker pull your-account-id.dkr.ecr.your-aws-region.amazonaws.com/your-repo-name:latest"

    - name: Run Docker container on AWS EC2
      run: |
        ssh ec2-user@your-ec2-instance-ip "docker run -d -p 80:80 --name your-app-name your-account-id.dkr.ecr.your-aws-region.amazonaws.com/your-repo-name:latest"
