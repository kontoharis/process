name: Deploy to AWS EC2

on:
  push:
    branches:
      - master  # Change this to your main branch name

jobs:
  test:
    runs-on: ubuntu-latest  # You can choose a different runner if needed

    steps:
      - uses: actions/checkout@v3
      - name: Run unit tests
        run: |
          pip install -r requirements.txt
          python -m unittest test_app.py
        working-directory: ./
        
  build_image:
    needs: test
    runs-on: ubuntu-latest  # You can choose a different runner if needed

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: actions/setup-python@v2
      with:
        python-version: 3.x  # Specify your Python version if needed

    - name: Build Docker image
      run: docker build -t flask-app:latest .

    - name: Build successful
      id: build-success
      run: echo "::set-output name=build-success::true"
    
    - name: Authenticate with AWS ECR
      run: |
        aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 403368042282.dkr.ecr.eu-north-1.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Tag Docker image
      run: docker tag flask-app:latest 403368042282.dkr.ecr.eu-north-1.amazonaws.com/test-repo:latest

    - name: Push Docker image to AWS ECR
      run: docker push 403368042282.dkr.ecr.eu-north-1.amazonaws.com/test-repo:latest
  
  deploy:
    needs: build_image  # This ensures that the "deploy" job depends on the "build" job
    runs-on: ubuntu-latest

    steps:
    - name: SSH into AWS EC2 instance and pull ECR image
      uses: appleboy/ssh-action@master
      with:
        host: 13.51.204.248
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          docker rm -f flask-app
          sudo apt install awscli -y # For Ubuntu
          sudo apt update

          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             
          # Retrieve Docker login password and execute the Docker login command
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 403368042282.dkr.ecr.eu-north-1.amazonaws.com
          
          # Pull the ECR image
          docker pull 403368042282.dkr.ecr.eu-north-1.amazonaws.com/test-repo:latest
          
          # Run Docker container on AWS EC2
          docker run -d -p 80:80 --name flask-app 403368042282.dkr.ecr.eu-north-1.amazonaws.com/test-repo:latest
